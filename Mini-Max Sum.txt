import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'miniMaxSum' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void miniMaxSum(List<Integer> arr) {
   
    int i,j;
    long temp;
    long [] s = new long [arr.size()];
    for(i=0;i<arr.size();i++)
    {
        long sum=0;
        for(j=0;j<arr.size();j++)
        {
            if(i==j)
            {
            continue;
            }
            else
            {
            sum=sum+arr.get(j);
            }
            
        }
        s[i]=sum;
    }
    //System.out.println(Arrays.toString(s));
    for(i=0;i<s.length;i++)
    {
        for(j=i+1; j<arr.size(); j++){
       if(s[i]>s[j])
       {
          temp=s[i];
          s[i]=s[j];
          s[j] = temp; 
       }
        }
    }
    System.out.println(s[0]+" "+ s[arr.size()-1]);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        String[] arrTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < 5; i++) {
            int arrItem = Integer.parseInt(arrTemp[i]);
            arr.add(arrItem);
        }

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
